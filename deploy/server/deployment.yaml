kind: Deployment
apiVersion: apps/v1
metadata:
  name: multicluster-global-hub-apiserver
  labels:
    app: multicluster-global-hub-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: multicluster-global-hub-apiserver
  template:
    metadata:
      labels:
        app: multicluster-global-hub-apiserver
    spec:
      serviceAccountName: multicluster-global-hub-apiserver-sa
      containers:
      - args:
        - "/global-hub-apiserver"
        - "--authorization-mode=RBAC"
        - "--enable-bootstrap-token-auth"
        - "--service-account-key-file=/var/run/apiservice/certs/kube-serviceaccount.key"
        - "--client-ca-file=/var/run/apiservice/certs/client-ca.crt"
        - "--client-key-file=/var/run/apiservice/certs/client-ca.key"
        - "--enable-bootstrap-token-auth"
        - "--enable-priority-and-fairness=false"
        - "--api-audiences="    
        - "--storage-backend=etcd3"
        - "--v=1"
        - "--service-account-lookup=false"
        - "--service-account-signing-key-file=/var/run/apiservice/certs/kube-serviceaccount.key"
        - "--enable-admission-plugins=NamespaceLifecycle,ServiceAccount,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ManagedClusterMutating,ManagedClusterValidating,ManagedClusterSetBindingValidating"
        - "--bind-address=0.0.0.0"
        - "--secure-port=9443"
        - "--tls-cert-file=/var/run/apiservice/certs/serving-kube-apiserver.crt"
        - "--tls-private-key-file=/var/run/apiservice/certs/serving-kube-apiserver.key"
        - "--feature-gates=DefaultClusterSet=true,OpenAPIV3=false"
        - "--enable-embedded-etcd=true"
        - "--etcd-servers=https://127.0.0.1:2379"
        - "--service-cluster-ip-range=10.0.0.0/24"
        - "--service-account-issuer=https://kubernetes.default.svc"
        - "--external-hostname=API_HOST"
        env:
        name: multicluster-global-hub-apiserver
        image: quay.io/clyang82/multicluster-global-hub-apiserver:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /var/run/apiservice/certs
          name: apiservice-certs
      volumes:
      - name: apiservice-certs
        secret:
          defaultMode: 420
          secretName: global-hub-certs
